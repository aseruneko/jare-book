<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>jar-book</title>
        <link rel="stylesheet" href="https://unpkg.com/modern-css-reset/dist/reset.min.css">
        <link href="/css/style.css" rel="stylesheet">
        <script src="/socket.io/socket.io.js"></script>
    </head>
    <body id="book-room-body" class="book-room">
        <header>
            <h1>jar-book@1.1.0</h1>
        </header>
        <section>
            <div class="status-board">
                <div class="row">
                    <div>部屋名</div>
                    <div><%- roomName %></div>
                </div>
                <div class="row">
                    <div>ID</div>
                    <div><%- id %>  <a id="room-id-copy-link" onclick="roomIdcopy()">[COPY]</a></div>
                </div>
                <div class="row">
                    <div>status</div>
                    <div><%- status %></div>
                </div>
                <div class="row">
                    <div>制限時間</div>
                    <div><%- minuteMax %> 分</div>
                </div>
                <div class="row">
                    <div>ページ数</div>
                    <div><%- pageNum %> ページ</div>
                </div>
                <div class="row">
                    <div>執筆順</div>
                    <div><%- writeOrderStyle %></div>
                </div>
            </div>
            <div class="player-board">
                <div class="player">
                    <div class="name th">名前</div>
                    <div class="memberNo th">席順</div>
                </div>
                <% players.forEach(function(player) { %>
                    <div class="player">
                        <div class="name"><%= player.name %></div>
                        <div class="memberNo"><%= player.memberNo + 1 %> 番目</div>
                    </div>
                <% }); %>
            </div>
            <% if(status == "WAITING"){ %>
                <button id="start-button" class="primary-btn not-display" onclick="onClickRoomCreation()">始める</button>
                <p id="host-waiting-text" class="gray-text">ホストの開始を待っています...</p>
            <% } %>
            <% if(status == "TITLING"){ %>
                <section class="title-edit-board">
                    <h1>小説の題名を決める</h1>
                    <div>
                        <h2>Step1. ランダムに名詞を4つ選ぶ</h2>
                        <div class="input-row">
                            <input class="half-text" id="title_1_1">
                            <input class="half-text" id="title_1_2">
                        </div>
                        <div class="input-row">
                            <input class="half-text" id="title_1_3">
                            <input class="half-text" id="title_1_4">
                        </div>
                    </div>
                    <div>
                        <h2>Step2. 上から1つ選び、そこから連想される名詞を4つ選ぶ</h2>
                        <span>
                            <button onclick="onClickSelectTitleOne()">
                                上から1つ選ぶ
                            </button>
                            <p id="title_2_0"></p>
                        </span>
                        <div class="input-row">
                            <input class="half-text" id="title_2_2">
                            <input class="half-text" id="title_2_3">
                        </div>
                        <div class="input-row">
                            <input class="half-text" id="title_2_1">
                            <input class="half-text" id="title_2_4">
                        </div>
                    </div>
                    <div>
                        <h2>Step3. 1つずつ単語を選び、それを組み合わせタイトルにする</h2>
                        <span>
                            <button onclick="onClickSelectTitleTwo()">
                                1つずつ、単語を選ぶ
                            </button>
                            <p id="title_3_0"></p>
                            <p id="title_3_1"></p>
                        </span>
                        <div class="title-submit-wrapper">
                            <input class="long-text" id="title_3" placeholder="小説のタイトル">
                            <button class="primary-btn" id="title-submission-btn" onclick="onClickTitleSubmission()">
                                決定
                            </button>
                            <p id="title-submitted"></p>
                        </div>
                    </div>
                </section>
            <% } %>
            <% if(status == "WRITING"){ %>
                <section class="writing-board">
                    <h1 id="book-title"></h1>
                    <div>
                        <% if(editPageNum != 0){ %>
                            <p class="page-num"><%- editPageNum %>ページ目</p>
                        <% } %>
                        <div id="previous-page" class="not-display"></div>
                    </div>
                    <div>
                        <p class="page-num"><%- editPageNum + 1 %>ページ目</p>
                        <textarea id="current-page" rows="10"></textarea>
                    </div>
                    <div class="timer-wrapper">
                        <p class="label">残り時間</p>
                        <p id="timer"></p>
                    </div>
                    <button class="primary-btn" onclick="onClickPageSubmission()">送信</button>
                    <p id="page-submission-text"></p>
                </section>
            <% } %>
            <% if(status == "READING"){ %>
                <% books.forEach(function(book) { %>
                    <section class="view-board">
                        <p>--------------------------------------------------</p>
                        <h1>『<%- book.title %>』</h1>
                        <% book.pages.forEach(function(page) { %>
                            <p>--------------------------------------------------</p>
                            <p class="page"><%- page %></p>
                        <% }); %>
                    </section>
                <% }); %>
            <% } %>
        </section>
        <footer>
            <a href="http://twitter.com/aseruneko">@aseruneko</a>
            <a href="/">戻る</a>
        </footer>
        <script>
            const socket = io();
            const roomId = localStorage.getItem("roomId");
            const userId = localStorage.getItem("userId");
            const status = localStorage.getItem("status");
            var redFlag = false;
            var choosedTitleNum = 0;
            var timer = 0;
            function roomIdcopy() {
                navigator.clipboard.writeText(roomId).then(() => {
                    document.getElementById("room-id-copy-link").innerText = "[COPIED!]";
                });
            }
            function onClickRoomCreation() {
                var xhr = new XMLHttpRequest();
                xhr.open("POST", "../api/rooms/start", true);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.send(JSON.stringify(
                    {
                        roomId: roomId,
                    }
                ));
            };
            function onClickTitleSubmission() {
                const title = document.getElementById("title_3").value;
                var xhr = new XMLHttpRequest();
                xhr.open("POST", "../api/books/create", true);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.send(JSON.stringify(
                    {
                        roomId: roomId,
                        userId: userId,
                        title: title,
                    }
                ));
                document.getElementById("title-submission-btn").disabled = true;
                document.getElementById("title-submission-btn").classList = ["primary-btn disabled-btn"];
                document.getElementById("title-submitted").innerText = 'タイトル送信完了, 全員の提出が完了するまでお待ち下さい';
            }
            function onClickPageSubmission() {
                var xhr = new XMLHttpRequest();
                const page = document.getElementById("current-page").value;
                xhr.open("POST", `../api/book/edit`, true);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.send(JSON.stringify(
                    {
                        roomId: roomId,
                        userId: userId,
                        page: page,
                    }
                ));
                document.getElementById("page-submission-text").innerText = '全員が揃うまで何回でも提出可能です';
            }
            function onClickSelectTitleOne() {
                const titleOne = [];
                titleOne.push(document.getElementById("title_1_1").value);
                titleOne.push(document.getElementById("title_1_2").value);
                titleOne.push(document.getElementById("title_1_3").value);
                titleOne.push(document.getElementById("title_1_4").value);
                choosedTitleNum = Math.floor(Math.random() * titleOne.length);
                const selected = titleOne[choosedTitleNum];
                document.getElementById("title_2_0").innerText = `『${selected}』が選ばれました`;
            }
            function onClickSelectTitleTwo() {
                const titleOne = [];
                titleOne.push(document.getElementById("title_1_1").value);
                titleOne.push(document.getElementById("title_1_2").value);
                titleOne.push(document.getElementById("title_1_3").value);
                titleOne.push(document.getElementById("title_1_4").value);
                titleOne.splice(choosedTitleNum, 1);
                const titleTwo = [];
                titleTwo.push(document.getElementById("title_2_1").value);
                titleTwo.push(document.getElementById("title_2_2").value);
                titleTwo.push(document.getElementById("title_2_3").value);
                titleTwo.push(document.getElementById("title_2_4").value);
                const selectedOne = titleOne[Math.floor(Math.random() * titleOne.length)];
                const selectedTwo = titleTwo[Math.floor(Math.random() * titleOne.length)];
                document.getElementById("title_3_0").innerText = `『${selectedOne}』が選ばれました`;
                document.getElementById("title_3_1").innerText = `『${selectedTwo}』が選ばれました`;
            }
            function countDown() {
                if(timer > 0) {
                    timer -= 1;
                    const minute = Math.floor(timer / 60);
                    const second = timer % 60;
                    const timerStr = `${minute.toString()}分${second.toString()}秒`;
                    document.getElementById("timer").innerText = timerStr;
                } else {
                    if(redFlag == false) {
                        redFlag = true;
                        document.getElementById("book-room-body").classList = ["book-room red-alert"];
                    }
                }
            }
            socket.on('roomStatusUpdation', (message) => {
                if (message.roomId == roomId) {
                    window.localStorage.setItem('status', message.status)
                    window.location.reload();
                }
            });
            if(status == "WAITING") {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", `../api/rooms/${roomId}/users/${userId}/is-host`, true);
                xhr.onload = function () {
                    const res = JSON.parse(xhr.response);
                    const btnElement = document.getElementById('start-button');
                    const txtElement = document.getElementById('host-waiting-text');
                    if(res.isHost) {
                        btnElement.classList = ["primary-btn"];
                        txtElement.classList = ["gray-text not-display"];
                    } else {
                        btnElement.classList = ["primary-btn not-display"];
                        txtElement.classList = ["gray-text"];
                    }
                }
                xhr.send();
            }
            if(status == "WRITING") {
                var xhr = new XMLHttpRequest();
                xhr.open("GET", `../api/rooms/${roomId}/users/${userId}`, true);
                xhr.onload = function () {
                    const res = JSON.parse(xhr.response);
                    document.getElementById("book-title").innerText = `『${res.title}』`;
                    if(res.previousPage) {
                        if(res.previousPage[0] != null) {
                            document.getElementById("previous-page").classList = [""];
                        }
                        document.getElementById("previous-page").innerText = res.previousPage[0];
                    }
                    const minuteMax = parseInt(res.minuteMax);
                    const secondMax = minuteMax * 60;
                    timer = secondMax;
                    setInterval(countDown, 1000);
                }
                xhr.send();
            }
        </script>
    </body>
</html>